// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import (
	context "context"

	api "github.com/chris/delayed-wallet-transactions/pkg/api"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// CronScheduler is an autogenerated mock type for the CronScheduler type
type CronScheduler struct {
	mock.Mock
}

// ScheduleTransaction provides a mock function with given fields: ctx, tx, delay
func (_m *CronScheduler) ScheduleTransaction(ctx context.Context, tx *api.Transaction, delay time.Duration) error {
	ret := _m.Called(ctx, tx, delay)

	if len(ret) == 0 {
		panic("no return value specified for ScheduleTransaction")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *api.Transaction, time.Duration) error); ok {
		r0 = rf(ctx, tx, delay)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCronScheduler creates a new instance of CronScheduler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCronScheduler(t interface {
	mock.TestingT
	Cleanup(func())
}) *CronScheduler {
	mock := &CronScheduler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
