openapi: 3.0.0
info:
  title: Delayed Wallet Transaction API
  version: 1.0.0
  description: An API for scheduling and managing delayed wallet transactions.

paths:
  /transactions:
    post:
      summary: Schedule a new transaction
      operationId: scheduleTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTransaction'
      responses:
        '201':
          description: Transaction successfully scheduled and funds reserved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '400':
          description: Invalid request
        '422':
          description: Unprocessable Entity (e.g., insufficient funds)

  /wallets:
    get:
      summary: List all wallets
      operationId: listWallets
      responses:
        '200':
          description: A list of wallets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Wallet'
    post:
      summary: Create a new wallet
      operationId: createWallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewWallet'
      responses:
        '201':
          description: Wallet successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '400':
          description: Invalid request
        '409':
          description: Wallet for this user already exists

  /wallets/{userId}:
    get:
      summary: Get wallet details for a user
      operationId: getWalletByUserId
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Wallet details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '404':
          description: Wallet not found
    delete:
      summary: Delete a wallet
      operationId: deleteWallet
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Wallet successfully deleted
        '404':
          description: Wallet not found

  /wallets/{userId}/transactions:
    get:
      summary: List all transactions for a user
      operationId: listTransactionsByUserId
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of transactions for the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '404':
          description: User not found

  /ledger:
    get:
      summary: List recent ledger entries
      operationId: listLedgerEntries
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: A list of recent ledger entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LedgerEntry'

  /transactions/{transactionId}:
    parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get transaction details
      operationId: getTransactionById
      responses:
        '200':
          description: Transaction details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Transaction not found
    post:
      summary: Cancel a transaction
      operationId: cancelTransactionById
      responses:
        '204':
          description: Transaction cancelled successfully
        '404':
          description: Transaction not found
        '409':
          description: Transaction not in a cancellable state

components:
  schemas:
    LedgerEntry:
      type: object
      properties:
        transaction_id:
          type: string
        entry_id:
          type: string
        account_id:
          type: string
        debit:
          type: integer
          format: int64
        credit:
          type: integer
          format: int64
        description:
          type: string
        timestamp:
          type: string
          format: date-time
      required:
        - transaction_id
        - entry_id
        - account_id
        - description
        - timestamp

    NewWallet:
      type: object
      properties:
        user_id:
          type: string
      required:
        - user_id

    NewTransaction:
      type: object
      properties:
        from_user_id:
          type: string
        to_user_id:
          type: string
        amount:
          type: integer
          format: int64
          description: The amount to transfer.
        scheduled_at:
          type: string
          format: date-time
          description: The time at which the transaction should be executed.
      required:
        - from_user_id
        - to_user_id
        - amount
        - scheduled_at

    Transaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        from_user_id:
          type: string
        to_user_id:
          type: string
        amount:
          type: integer
          format: int64
        status:
          type: string
          enum: ["RESERVED", "PENDING_APPROVAL", "APPROVED", "REJECTED", "COMPLETED", "FAILED"]
        scheduled_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        ttl:
          type: integer
          format: int64
          description: A Unix timestamp to enable TTL for automatic record deletion.
      required:
        - id
        - from_user_id
        - to_user_id
        - amount
        - status
        - scheduled_at
        - created_at
        - updated_at

    Wallet:
      type: object
      properties:
        user_id:
          type: string
        balance:
          type: integer
          format: int64
        reserved:
          type: integer
          format: int64
        version:
          type: integer
          format: int64
          description: A version number for optimistic locking.
        ttl:
          type: integer
          format: int64
          description: A Unix timestamp to enable TTL for automatic record deletion.
      required:
        - user_id
        - balance
        - reserved
        - version
