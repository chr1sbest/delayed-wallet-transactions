openapi: 3.0.0
info:
  title: "Delayed Wallet API"
  version: "1.0.0"
  description: "An API for a delayed wallet system, allowing for transactions to be scheduled and processed asynchronously."

paths:
  /transactions/{transactionId}/notify-settlement:
    post:
      summary: Notify of transaction settlement
      description: An internal endpoint for the settlement service to notify the API that a transaction has been settled.
      operationId: NotifySettlement
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Notification accepted.
        '404':
          description: Transaction not found.

  /transactions:
    post:
      summary: Schedule a new transaction
      operationId: scheduleTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTransaction"
      responses:
        '201':
          description: "Transaction created successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        '400':
          description: "Invalid request body"
        '422':
          description: "Insufficient funds or other processing error"

  /transactions/{transactionId}:
    get:
      summary: "Get a transaction by its ID"
      operationId: getTransactionById
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "A single transaction"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        '404':
          description: "Transaction not found"
    delete:
      summary: "Cancel a transaction by its ID"
      operationId: cancelTransactionById
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: "Transaction cancelled successfully"
        '404':
          description: "Transaction not found or not in a cancellable state"
        '409':
          description: "Transaction is not in a cancellable state"

  /wallets:
    post:
      summary: "Create a new wallet"
      operationId: createWallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewWallet"
      responses:
        '201':
          description: "Wallet created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wallet"
        '409':
          description: "Wallet for this user already exists"
    get:
      summary: "List all wallets"
      operationId: listWallets
      responses:
        '200':
          description: "A list of wallets"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Wallet"

  /wallets/{userId}:
    get:
      summary: "Get a wallet by user ID"
      operationId: getWalletByUserId
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "A single wallet"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wallet"
        '404':
          description: "Wallet not found"
    delete:
      summary: "Delete a wallet by user ID"
      operationId: deleteWallet
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: "Wallet deleted successfully"
        '404':
          description: "Wallet not found"

  /users/{userId}/transactions:
    get:
      summary: "List all transactions for a user"
      operationId: listTransactionsByUserId
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "A list of transactions for the user"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"

  /ledger:
    get:
      summary: "List recent ledger entries"
      operationId: listLedgerEntries
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: "A list of recent ledger entries"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LedgerEntry"

components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string

    NewWallet:
      type: object
      required:
        - user_id
        - name
      properties:
        user_id:
          type: string
        name:
          type: string

    NewTransaction:
      type: object
      properties:
        from_user_id:
          type: string
        to_user_id:
          type: string
        amount:
          type: integer
          format: int64
          description: "The amount of the transaction in the smallest currency unit (e.g., cents)."
          example: 10050
        delay_seconds:
          type: integer
          format: int32
          description: "An optional delay in seconds before the transaction is processed. Maximum 900 seconds (15 minutes)."
          example: 60
          minimum: 0
          maximum: 900
      required:
        - from_user_id
        - to_user_id
        - amount

    Transaction:
      type: object
      properties:
        id:
          type: string
        from_user_id:
          type: string
        to_user_id:
          type: string
        amount:
          type: integer
          format: int64
        status:
          type: string
          enum: ["RESERVED", "PENDING_APPROVAL", "APPROVED", "REJECTED", "COMPLETED", "FAILED"]
        delay_seconds:
          type: integer
          format: int32
          description: "The delay in seconds before the transaction is processed."
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        ttl:
          type: integer
          format: int64
          description: "A Unix timestamp representing the expiration time of the transaction record."

    LedgerEntry:
      type: object
      properties:
        entry_id:
          type: string
        transaction_id:
          type: string
        account_id:
          type: string
        debit:
          type: integer
          format: int64
        credit:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        description:
          type: string

    Wallet:
      type: object
      properties:
        user_id:
          type: string
        name:
          type: string
        balance:
          type: integer
          format: int64
          description: "The wallet balance in the smallest currency unit (e.g., cents)."
        reserved:
          type: integer
          format: int64
          description: "Funds reserved for pending transactions."
        version:
          type: integer
          format: int64
        created_at:
          type: string
          format: date-time