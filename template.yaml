AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Deploys the necessary DynamoDB tables and SQS queue for the Delayed Wallet Transactions service.

Parameters:
  BillingMode:
    Type: String
    Description: Specifies the billing mode for DynamoDB tables.
    Default: PAY_PER_REQUEST
    AllowedValues:
      - PROVISIONED
      - PAY_PER_REQUEST

Resources:
  # DynamoDB table for storing user wallets
  WalletsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Wallets
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
      BillingMode: !Ref BillingMode
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  # DynamoDB table for storing transactions
  TransactionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Transactions
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: created_at
          AttributeType: S
        - AttributeName: from_user_id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: !Ref BillingMode
      GlobalSecondaryIndexes:
        - IndexName: status-created_at-index
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: from_user_id-index
          KeySchema:
            - AttributeName: from_user_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  # DynamoDB table for immutable ledger entries
  LedgerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Ledger
      AttributeDefinitions:
        - AttributeName: entry_id
          AttributeType: S
        - AttributeName: gsi1pk
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: entry_id
          KeyType: HASH
      BillingMode: !Ref BillingMode
      GlobalSecondaryIndexes:
        - IndexName: gsi1pk-timestamp-index
          KeySchema:
            - AttributeName: gsi1pk
              KeyType: HASH
            - AttributeName: timestamp
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  # SQS Queue for processing transactions
  TransactionQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: TransactionQueue
      VisibilityTimeout: 300 # 5 minutes, adjust as needed

Outputs:
  WalletsTableName:
    Description: "The name of the Wallets DynamoDB table"
    Value: !Ref WalletsTable
  TransactionsTableName:
    Description: "The name of the Transactions DynamoDB table"
    Value: !Ref TransactionsTable
  LedgerTableName:
    Description: "The name of the Ledger DynamoDB table"
    Value: !Ref LedgerTable
  TransactionQueueUrl:
    Description: "The URL of the SQS transaction queue"
    Value: !Ref TransactionQueue
  TransactionQueueArn:
    Description: "The ARN of the SQS transaction queue"
    Value: !GetAtt TransactionQueue.Arn

  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/app/
      Handler: bootstrap
      Runtime: provided.al2023
      Events:
        ApiEvents:
          Type: HttpApi
      Environment:
        Variables:
          DYNAMODB_TRANSACTIONS_TABLE_NAME: !Ref TransactionsTable
          DYNAMODB_WALLETS_TABLE_NAME: !Ref WalletsTable
          DYNAMODB_LEDGER_TABLE_NAME: !Ref LedgerTable
          SQS_QUEUE_URL: !Ref TransactionQueue
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TransactionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref WalletsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref LedgerTable
        - SQSSendMessagePolicy:
            QueueName: !GetAtt TransactionQueue.QueueName

  ReconciliationLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/reconciliation_lambda/
      Handler: bootstrap
      Runtime: provided.al2023
      Events:
        Scheduler:
          Type: Schedule
          Properties:
            Schedule: "rate(5 minutes)"
      Environment:
        Variables:
          DYNAMODB_TRANSACTIONS_TABLE_NAME: !Ref TransactionsTable
          SQS_QUEUE_URL: !Ref TransactionQueue
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref TransactionsTable
        - SQSSendMessagePolicy:
            QueueName: !GetAtt TransactionQueue.QueueName

  SettlementLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/settlement_lambda/
      Handler: bootstrap
      Runtime: provided.al2023
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt TransactionQueue.Arn
            BatchSize: 1
      Environment:
        Variables:
          DYNAMODB_TRANSACTIONS_TABLE_NAME: !Ref TransactionsTable
          DYNAMODB_WALLETS_TABLE_NAME: !Ref WalletsTable
          DYNAMODB_LEDGER_TABLE_NAME: !Ref LedgerTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TransactionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref WalletsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref LedgerTable
