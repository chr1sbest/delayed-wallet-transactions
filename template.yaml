AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM template for the Delayed Wallet Transactions service, including Lambda functions, API Gateway, DynamoDB tables, and an SQS queue.

Parameters:
  BillingMode:
    Type: String
    Description: Specifies the billing mode for DynamoDB tables.
    Default: PAY_PER_REQUEST
    AllowedValues:
      - PROVISIONED
      - PAY_PER_REQUEST

Resources:
  # API Gateway
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: "DelayedTransactionsApi"
      StageName: api

  # Lambda Functions
  ApiFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      FunctionName: "DelayedTransactions-ApiFunction"
      CodeUri: ./cmd/app
      Handler: bootstrap
      Runtime: provided.al2023
      Timeout: 5
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt TransactionQueue.QueueName
        - DynamoDBCrudPolicy:
            TableName: !Ref WalletsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TransactionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref LedgerTable
        - DynamoDBCrudPolicy:
            TableName: !Ref WebsocketConnectionsTable
        - Statement:
            - Effect: Allow
              Action:
                - execute-api:ManageConnections
              Resource:
                - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketApi}/*'
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: any
            RestApiId: !Ref ApiGateway
      Environment:
        Variables:
          DYNAMODB_WALLETS_TABLE_NAME: !Ref WalletsTable
          DYNAMODB_TRANSACTIONS_TABLE_NAME: !Ref TransactionsTable
          DYNAMODB_LEDGER_TABLE_NAME: !Ref LedgerTable
          DYNAMODB_WEBSOCKET_CONNECTIONS_TABLE_NAME: !Ref WebsocketConnectionsTable
          SQS_QUEUE_URL: !Ref TransactionQueue
          WEBSOCKET_API_ENDPOINT: !Sub 'https://${WebSocketApi}.execute-api.${AWS::Region}.amazonaws.com/ws'

  ReconciliationLambda:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      FunctionName: "DelayedTransactions-ReconciliationLambda"
      CodeUri: ./cmd/reconciliation_lambda
      Handler: bootstrap
      Runtime: provided.al2023
      Timeout: 60
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref TransactionsTable
        - SQSSendMessagePolicy:
            QueueName: !GetAtt TransactionQueue.QueueName
      Events:
        Scheduler:
          Type: Schedule
          Properties:
            Schedule: "rate(5 minutes)"
      Environment:
        Variables:
          DYNAMODB_TRANSACTIONS_TABLE_NAME: !Ref TransactionsTable
          SQS_QUEUE_URL: !Ref TransactionQueue

  SettlementLambda:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      FunctionName: "DelayedTransactions-SettlementLambda"
      CodeUri: ./cmd/settlement_lambda
      Handler: bootstrap
      Runtime: provided.al2023
      Timeout: 30
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref WalletsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TransactionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref LedgerTable
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt TransactionQueue.Arn
            BatchSize: 1
      Environment:
        Variables:
          DYNAMODB_WALLETS_TABLE_NAME: !Ref WalletsTable
          DYNAMODB_TRANSACTIONS_TABLE_NAME: !Ref TransactionsTable
          DYNAMODB_LEDGER_TABLE_NAME: !Ref LedgerTable
          SQS_QUEUE_URL: !Ref TransactionQueue

  # WebSocket API Gateway
  WebSocketApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: "DelayedTransactions-WebSocketApi"
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"

  WebSocketIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiFunction.Arn}/invocations"

  WebSocketConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Sub 'integrations/${WebSocketIntegration}'

  WebSocketDisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Sub 'integrations/${WebSocketIntegration}'

  WebSocketDefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: $default
      AuthorizationType: NONE
      OperationName: DefaultRoute
      Target: !Sub 'integrations/${WebSocketIntegration}'

  WebSocketDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - WebSocketConnectRoute
      - WebSocketDisconnectRoute
      - WebSocketDefaultRoute
    Properties:
      ApiId: !Ref WebSocketApi

  WebSocketStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref WebSocketApi
      StageName: ws
      DeploymentId: !Ref WebSocketDeployment

  WebSocketApiPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt ApiFunction.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketApi}/*/*"

  # DynamoDB Tables
  WalletsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "DelayedWallets-Wallets"
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
      BillingMode: !Ref BillingMode
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  TransactionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "DelayedWallets-Transactions"
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: created_at
          AttributeType: S
        - AttributeName: from_user_id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: !Ref BillingMode
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      GlobalSecondaryIndexes:
        - IndexName: status-created_at-index
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: from_user_id-index
          KeySchema:
            - AttributeName: from_user_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  LedgerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "DelayedWallets-Ledger"
      AttributeDefinitions:
        - AttributeName: entry_id
          AttributeType: S
        - AttributeName: gsi1pk
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: entry_id
          KeyType: HASH
      BillingMode: !Ref BillingMode
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      GlobalSecondaryIndexes:
        - IndexName: gsi1pk-timestamp-index
          KeySchema:
            - AttributeName: gsi1pk
              KeyType: HASH
            - AttributeName: timestamp
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  WebsocketConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "DelayedWallets-WebsocketConnections"
      AttributeDefinitions:
        - AttributeName: connection_id
          AttributeType: S
        - AttributeName: pk
          AttributeType: S
      KeySchema:
        - AttributeName: connection_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: pk-index
          KeySchema:
            - AttributeName: pk
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: !Ref BillingMode
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  # SQS Queue
  TransactionQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: "DelayedTransactions-TransactionQueue"
      VisibilityTimeout: 300

Outputs:
  ApiUrl:
    Description: 'API URL'
    Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/api'
  WebSocketApiUrl:
    Description: 'WebSocket API URL'
    Value: !Sub 'wss://${WebSocketApi}.execute-api.${AWS::Region}.amazonaws.com/ws'
  WalletsTableName:
    Description: "The name of the Wallets DynamoDB table"
    Value: !Ref WalletsTable
  TransactionsTableName:
    Description: "The name of the Transactions DynamoDB table"
    Value: !Ref TransactionsTable
  LedgerTableName:
    Description: "The name of the Ledger DynamoDB table"
    Value: !Ref LedgerTable
  TransactionQueueUrl:
    Description: "The URL of the SQS transaction queue"
    Value: !Ref TransactionQueue
  TransactionQueueArn:
    Description: "The ARN of the SQS transaction queue"
    Value: !GetAtt TransactionQueue.Arn